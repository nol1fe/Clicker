@{
    ViewBag.Title = "Clicker";
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<style>
    /*div.border {
        border: 1px solid black;
    }*/
</style>

<div class="container">
    <div class="row">

        <div class="container col-sm-4">

            <div class="panel-group col-sm-12 row" id="panelLeft" style="padding-top:4%">

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#panelLeft" href="#statistics">Statistics <small>info</small></a>
                        </h4>
                    </div>
                    <div id="statistics" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <p id="totaltoasts">Total toasts maked: 0</p>
                            <p id="clickvalue">Click value: 1</p>
                            <p id="totalclicks">Total clicks : 0</p>
                            <p id="toastsps">Toasts per second : 0</p>
                            <p id="timer">Time : 0h 0min 0s</p>
                            <p id="test"></p>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#mainpanel" href="#quests">Quests <small>progress</small></a>
                        </h4>

                    </div>
                    <div id="quests" class="panel-collapse collapse">
                        <div class="panel-body">
                            <h5>Click Quest</h5>
                            <div class="progress">
                                <div id="questBarClick" class="progress-bar progress-bar-striped active" role="progressbar" style="background-color:#f79422"
                                     aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                    0%
                                </div>
                            </div>
                            <h5>Production Quest</h5>
                            <div class="progress">
                                <div id="questBarProduction" class="progress-bar progress-bar-striped active" role="progressbar" style="background-color:#2ab733"
                                     aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                    0%
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row col-sm-4" id="game" style="text-align:center; padding-top:4%;">
            <div class="col-xs-12">
                <div class="col-xs-4" style="padding-bottom:5%;" id="flyingCost">
                    <span class="badge" id="flyingCostValue" style="background-color:red"></span>
                </div>
                <div class="col-xs-8 pull-right" style="padding-bottom:5%; text-align:end" id="currentAmmount">
                    <span class="badge" style="background-color:green">0</span>
                </div>
            </div>
            <div class="col-sm-12" style="padding-bottom:5%">
                <img id="toastclick" src="/Content/Images/toast.png" alt="toast" class="tost">
            </div>
            <div class="col-sm-12" style="padding-bottom:5%" id="notifications">
                <div id="plusOne"></div>
                <div id="flyingvalue"></div>
                <div id="flyingAchievement"></div>
            </div>
        </div>

        <div class="container col-sm-4">
            <div class="panel-group col-sm-12 row" id="panelRight" style="padding-top:4%">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#panelRight" href="#upgradesPanel">Upgrade <small>production</small></a>
                        </h4>
                        <span id="loadingSpan" style="margin-left:45%"><img class="gif" style="height:50px" src="/Content/Images/ajax-loader.gif"></span>
                    </div>
                    <div id="upgradesPanel" class="panel-collapse collapse in">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.3.min.js"></script>

    <script>

        var toastIMGsmall = '<img style="width:20px;" src="/Content/Images/toast.png"/>';
        var toastIMGmedium = '<img style="width:60px;" src="/Content/Images/toast.png"/>';

        var achievement1IMG = '<img style="height: 50px;" src="/Content/Images/toster1.png"/>';

        var totalAmmount = 0;
        var currentAmmount = 10000;

        var clickCount = 0;
        var clickValue = 1;

        var achievMultiplier = 1;
        var achievMultiplierX = 2;

        var questProductionNeededAmmount = 50;
        var achievementUnlockNeededAmmount = 5000;

        var toastsPS = 0;

        var upgradeCost = 0;

        var divCounter = 0;
        var costDivCounter = 0;

        var upgradeList = [
     //UpgradeType : 0 - production per second upgrade, UpgradeType: 1 - click upgrade
    //{ Id: 1, Name: "Cook", Cost: 10, Value: 1, Level: 0, ImgUrl: "/Content/Images/cook.png", UpgradeType: 0 },
    //{ Id: 2, Name: "Extra Cheese", Cost: 50, Value: 3, Level: 0, ImgUrl: "/Content/Images/cheese.png", UpgradeType: 0 },
    //{ Id: 3, Name: "Extra Tomato", Cost: 75, Value: 5, Level: 0, ImgUrl: "/Content/Images/tomato.png", UpgradeType: 0 },
    //{ Id: 4, Name: "Cursor", Cost: 100, Value: 1, Level: 0, ImgUrl: "/Content/Images/cursor.png", UpgradeType: 1 }

        ];

        var url = "api/upgrades/";

        var testlist = [];

        var upgradeId;

        $(function () {
            $("#toastclick").on('click', function (e) {
                currentAmmount += clickValue;
                totalAmmount += clickValue;
                clickCount++;
                totalAmmountInfo();
                toastsPsInfo();
                totalClicksInfo();
                currentAmmountInfo();

                achievementClickShow(questClickCost);
                achievementProductionShow(questProductionNeededAmmount);

                achievementUnlockedShow(achievementUnlockNeededAmmount);
                achievementDisplay(achiev1);

                questClickCount++;
                resetQuestClick();
                questProgress("#questBarClick", questClickPercentage);

                var min = -40;
                var max = 20;
                var randomNumberX = Math.floor(Math.random() * (max - min + 1)) + min;
                var randomNumberY = Math.floor((Math.random() * 30) + 1);


                var relX = e.pageX;
                var relY = e.pageY;
                var plus = "+ " + clickValue + " " + toastIMGsmall
                var div = $('<div class="tempDiv">').css({
                    "position": "absolute",
                    "left": relX,
                    "top": relY
                })

                if (divCounter <= 10) {
                    div.append(plus)
                        .animate({ top: relY - (60 + randomNumberY), left: relX - randomNumberX })
                        .css('color', 'black')
                        .fadeIn(500)
                        .fadeOut(200);
                    $(document.body).append(div);
                    divCounter++;
                }
                else {
                    div.append(plus)
                       .animate({ top: relY - (60 + randomNumberY), left: relX - randomNumberX })
                       .css('color', 'black')
                       .fadeIn(500)
                       .fadeOut(200);
                    $(document.body).append(div);
                    $(".tempDiv").remove();
                    divCounter = 0;
                }

            });

            //$.getJSON(url)
            //   .done(function (data) {
            //       $.each(data, function (key, upgrade) {
            //           $('<li>', { text: formatUpgrade(upgrade) }).appendTo($('#upgradelist'));

            //       });
            //   });

            //function formatUpgrade(upgrade) {
            //    return "Id: " + upgrade.Id + ", Name: " + upgrade.Name + ', Cost: ' + upgrade.Cost + ', Value : ' + upgrade.Value;
            //}

            //function getName(item) {
            //    return item.Name;
            //}

            // $.getJSON(url).done(function (data) {
            //     upgradeList = data;
            //     console.log(testlist);
            //     console.log(upgradeList);
            //});

            $('#upgradesPanel').on("click", "div.upgrade", upgradeClick);


            $.ajax({
                url: 'api/upgrades',

                complete: function(){
                    $("#loadingSpan").hide()
                },

                success: function (data) {
                    upgradeList = data;
                    upgradeDisplay();
                }
            });

            // $.getJSON(url, function (data) {
            //     for (var i = 0; i < data.length; i++)
            //     {
            //         console.log("Name: " + data[i].Name);
            //     }
            // });

            //for (var i = 0; i < upgradeList.length ; i++) {
            //    console.log("id = " + upgradeList[i].id + " name = " + upgradeList[i].name + " cost = " + upgradeList[i].cost)
            //}

            //$('div').click(function (event) {
            //    console.log(event.target.id);
            //});

            questProgress("#questBarProduction", questProductionPercentage);

            //upgrade();
            gameUpdate();

        });

        function upgradeDisplay() {
            for (var i = 0; i < upgradeList.length; i++) {
                $('#upgradesPanel').append(
             '<div name="upgrade" style="margin-bottom:2%; padding-left:1%;" class="row upgrade" data-id="' + upgradeList[i].Id + '">'
             + '<div class="col-xs-2 pull-left" style="text-align:center" border">'
             + '<img style="width: 50px" src=' + upgradeList[i].ImgUrl + '>'
             + '</div>'
             + '<div class="col-xs-10 push-right border" id="upgdescription' + upgradeList[i].Id + '">'
             + '<div class="col-xs-7 border"><b>' + upgradeList[i].Name + '</b></div>'
             + '<div class="col-xs-5 border" style="text-align:end" id="upglevel' + upgradeList[i].Id + '">Level: ' + upgradeList[i].Level + '</div>'
             + '<div class="col-xs-12 border" id="upgcost' + upgradeList[i].Id + '">Cost: ' + upgradeList[i].Cost + ' ' + toastIMGsmall + '</div>'
             + '</div>'
             + '</div>')

                if (upgradeList[i].UpgradeType == 0) {
                    $('#upgdescription' + upgradeList[i].Id).append(
                  '<div class="col-xs-12" id="upgprofit' + upgradeList[i].Id + '">Produces: ' + upgradeList[i].Value + ' ' + toastIMGsmall + ' per second</div>');
                }
                else if (upgradeList[i].UpgradeType == 1) {
                    $('#upgdescription' + upgradeList[i].Id).append(
                '<div class="col-xs-12" id="upgprofit' + upgradeList[i].Id + '">Produces: ' + upgradeList[i].Value + ' ' + toastIMGsmall + ' per click');
                }
            }

            //$('#upgradesPanel > div').on("click", upgradeClick);

        }

        function upgradeClick() {
            upgradeId = $(this).data("id");
            console.log("Id klikniete: " + upgradeId);

//            var upgradeSelected = _.findWhere(upgradeList, { Id: upgradeId })
            var upgradeSelected = _.find(upgradeList, function (item) {
                return item.Id === upgradeId 
            })


            console.log(upgradeSelected);

            if (currentAmmount >= upgradeSelected.Cost) {
                upgradeSelected.Level++;
                $("#upglevel" + upgradeSelected.Id).html("Level: " + upgradeSelected.Level)
                levelUpAnimation();

                if (upgradeSelected.UpgradeType == 0) {
                    toastsPS += upgradeSelected.Value * achievMultiplier;
                }
                else if (upgradeSelected.UpgradeType == 1) {
                    clickValue += upgradeSelected.Value * achievMultiplier;
                }
                currentAmmount = currentAmmount - upgradeSelected.Cost;

                messageTop("#5f87c6", "- " + upgradeSelected.Cost + " " + toastIMGsmall);

                upgradeSelected.Cost += upgradeSelected.Cost;
                currentAmmountInfo();
                if (upgradeSelected.UpgradeType == 0) {
                    toastsPsInfo();
                    $("#upgprofit" + upgradeSelected.Id).html('Produces: ' + (upgradeSelected.Value * achievMultiplier) + ' ' + toastIMGsmall + ' per second')
                }
                else if (upgradeSelected.UpgradeType == 1) {
                    currentAmmountInfo();
                    $("#upgprofit" + upgradeSelected.Id).html('Produces: ' + (upgradeSelected.Value * achievMultiplier) + ' ' + toastIMGsmall + ' per click');
                }
                $("#upgcost" + upgradeSelected.Id).html('Cost: ' + upgradeSelected.Cost + ' ' + toastIMGsmall);

            }

            else {
                messageRight("red", "Not enough" + " " + toastIMGsmall);
            }
        }

        var levelUpStart = 0;
        var levelUpEnd = 0;

        function levelUpAnimation() {
            if (levelUpStart == 0) {
                $("#upglevel" + upgradeId)
                .animate({ fontSize: "16px" }, 500)
                .animate({ fontSize: "14px" }, 300);
            }

            levelUpStart++;

            setTimeout(function () {
                levelUpEnd++;
                if (levelUpStart == levelUpEnd) {
                    levelUpStart = 0;
                    levelUpEnd = 0;
                    $("#upglevel" + upgradeId)
                        .animate({ fontSize: "14px" }, 300);
                }
            }, 700);
        }


        var questClickCount = 0;
        var questClickPercentage = 0;
        var questClickCost = 10;

        function resetQuestClick() {
            if ($("#questBarClick").attr("aria-valuenow") < 100) {
                //console.log(questClickCount);
                questClickPercentage = (questClickCount / questClickCost) * 100;
                //console.log("procenty do questa " + questClickPercentage);
            }
            else if ($("#questBarClick").attr("aria-valuenow") >= 100) {
                questClickCount = 0;
                questClickPercentage = 0;
            }

        }

        var questProductionCount = 0;
        var questProductionPercentage = 0;
        var questProductionCost = 50;

        function resetQuestProduction() {
            if ($("#questBarProduction").attr("aria-valuenow") <= 100) {
                questProductionPercentage = (questProductionCount / questProductionCost) * 100;
            }
            else if (questProductionPercentage > 100) {
                questProductionPercentage = 0;
                questProductionCount = 0
            }
        }

        var msInterval = 1000;
        var timer = { seconds: 0, minutes: 0, hours: 0 };

        function myTimer() {
            if (timer.seconds == 60) {
                timer.minutes++;
                timer.seconds = 0;
            }
            if (timer.minutes == 60) {
                timer.hours++;
                timer.minutes = 00;
            }

            $("#timer").html("Time: " + timer.hours.toString() + 'h ' + timer.minutes.toString() + 'min ' + timer.seconds.toString() + 's');
        }

        var game = setInterval(function () {
            timer.seconds++;
            myTimer();
            currentAmmount += toastsPS;
            totalAmmount += toastsPS;
            questProductionCount += toastsPS;
            gameUpdate();

            achievementProductionShow(questProductionNeededAmmount);
            achievementUnlockedShow(achievementUnlockNeededAmmount);
            achievementClickShow(questClickCost);

            questProgress("#questBarClick", questClickPercentage);
            questProgress("#questBarProduction", questProductionPercentage);

            achievementDisplay(achiev1);

        }, msInterval);

        function totalClicksInfo() {
            $("#totalclicks").html(toastIMGsmall + " Total clicks : " + clickCount);
        }

        function clickValueInfo() {
            $("#clickvalue").html(toastIMGsmall + " Toasts per click: " + clickValue);
        }

        function toastsPsInfo() {
            $("#toastsps").html(toastIMGsmall + " Toasts per second: " + toastsPS);
        }

        function totalAmmountInfo() {
            $("#totaltoasts").html(toastIMGsmall + " Total toasts maked: " + totalAmmount);
        }

        function currentAmmountInfo() {
            $("#currentAmmount").html('<span class="badge" style="background-color:green">' + currentAmmount + ' ' + toastIMGsmall + '</span>');
        }

        function gameUpdate() {
            totalAmmountInfo();
            currentAmmountInfo();
            clickValueInfo();
            toastsPsInfo();
            totalClicksInfo();

            resetQuestProduction();
            achievementToolTip(achiev1);
        }

        function messageRight(color, message) {
            $("#flyingvalue")
                .prepend('<div>' + message + '</div>')
                .fadeIn(7000)
                .css('color', color)
                .css({ top: 200 })
                .animate({ top: '100' })
                .children(':first')
                .delay(200)
                .fadeOut(1000)
        }

        function messageLeft(color, messageFirstLine, messageSecondLine) {
            $("#flyingAchievement")
                .prepend('<div style="text-align: center">' + messageFirstLine + '<div style="text-align: center">' + messageSecondLine + '</div></div>')
                .fadeIn(7000)
                .css('color', color)
                .css({ top: 250, left: 0 })
                .animate({ top: 190, left: -370 })
                .children(':first')
                .delay(1000)
                .fadeOut(7000)
        }

        var messageCounterStart = 0;
        var messageCounterEnd = 0;

        function messageTop(color, message) {

            $("#flyingCostValue").html(message).css('color', color);
            if (messageCounterStart == 0) {
                $("#flyingCostValue").fadeIn(300);
            }

            messageCounterStart++;

            setTimeout(function () {
                messageCounterEnd++;
                if (messageCounterStart == messageCounterEnd) {
                    messageCounterStart = 0;
                    messageCounterEnd = 0;
                    $("#flyingCostValue").hide();

                }
            }, 1500);

        }

        var achievPercentClick = (totalAmmount / questClickCost) * 100;

        var achiev1 = new achievementModel(5, "New Toster!", 5000, 2, achievement1IMG);


        function achievementModel(id, name, neededValue, bonus, imgAchievement) {
            this.id = id;
            this.name = name;
            this.neededValue = neededValue;
            this.bonus = bonus;
            this.currentAmmount = currentAmmount;
            this.imgAchievement = imgAchievement;
        }

        function achievementClickShow(neededValueToDisplay) {
            if (questClickCount >= questClickCost) {
                clickValue *= 2;

                questClickCount = 0;

                if (questClickCost <= 100) {
                    questClickCost += 30;
                }
                else {
                    questClickCost += 200;
                }
                messageLeft("#f79422", "Congratulations! You have clicked " + toastIMGsmall + " " + clickCount + " times", "Your " + toastIMGsmall + " per click is doubled");
            }
        }

        function achievementProductionShow(neededValueToDisplay) {
            if (questProductionCount >= questProductionCost) {
                toastsPS *= 2;
                messageLeft("green", "Congratulations! You have made " + totalAmmount + " " + toastIMGsmall, "Your total production of " + toastIMGsmall + " is doubled");
                questProductionCount = 0;

                if (questProductionCost <= 1000) {
                    questProductionCost += 200;
                }
                else {
                    questProductionCost *= 5;
                }
            }
        }

        function achievementUnlockedShow(neededValueToDisplay) {
            if (totalAmmount >= achievementUnlockNeededAmmount) {
                achievementUnlockNeededAmmount = achievementUnlockNeededAmmount * 5;
                messageLeft("blue", "Congratulations! You have unlocked achievement!")
            }
        }

        function questProgress(selector, valueInPercentage) {
            $(selector).animate()
                .addClass("active")
                .attr("aria-valuenow", valueInPercentage)
                .width(valueInPercentage + "%")

            if (valueInPercentage < 100) {
                $(selector).animate().html(valueInPercentage.toPrecision(3) + "%");
            }
            else {
                $(selector).animate().html('<span style="text-align:center">Success!</span>');
            }
                
        }

        function achievementToolTip(achievementModel) {

            if (totalAmmount < achievementModel.neededValue) {
                //$("#achievDiv" + achievementModel.id).tooltip({
                //    content: totalAmmount + " / " + achievementModel.neededValue + " to get bonus!"
                //});

                $("#achievDiv" + achievementModel.id + " img")
                    .attr('data-toggle', "tooltip")
                    .attr('data-placement', "bottom")
                    .attr('title', totalAmmount + " / " + achievementModel.neededValue + " to get bonus!")

            }
            else if (totalAmmount >= achievementModel.neededValue) {

                $("#achievDiv" + achievementModel.id).tooltip({
                    content: "Done!"
                }).css('opacity', '1.0');

                //$("#achievDiv" + achievementModel.id).tooltip({ content: "Upgrades will produces 2x" + toastIMGsmall });

                $("#achievDiv" + achievementModel.id + " img")
                    .attr('data-toggle', "tooltip")
                    .attr('data-placement', "top")
                    .attr('title', "Upgrades will produces 2x" + toastIMGsmall)


                //data-placement="left" title="Tooltip on left""
                achievMultiplier = achievMultiplierX;
            }
        }

        function achievementDisplay(achievementModel) {
            this.achievementModel = achievementModel;

            if (totalAmmount >= 1000) {
                if ($("#achievements").is(':empty')) {
                    $("#achievements").append('<div id="achievDiv' + achievementModel.id + '" title=""> ' + achievementModel.imgAchievement + '</div>').fadeIn(8000);
                    $("#achievDiv" + achievementModel.id).css('opacity', '0.2')
                    $("#achievementHeading").css('visibility', 'visible');
                };
            }

        }
    </script>
}
